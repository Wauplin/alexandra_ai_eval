name: CI

on:
  pull_request:
    branches:
      - main

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jpetrucciani/black-check@master

  pytest:
    strategy:
        matrix:
            os: [windows-latest, macos-latest, ubuntu-latest]
            python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install libsndfile
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" 
            brew install libsndfile
            brew install ffmpeg
          elif [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install libsndfile1-dev
            sudo apt install ffmpeg
          fi
        shell: bash

      - name: Install ffmpeg on windows
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            New-Item -Type Directory -Path C:\ffmpeg ; Set-Location C:\ffmpeg
            curl.exe -L 'https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip' -o 'ffmpeg.zip'
            Expand-Archive .\ffmpeg.zip -Force -Verbose
            Get-ChildItem -Recurse `
                -Path .\ffmpeg\ -Filter *.exe |
                ForEach-Object {
                    Move-Item $_ -Destination .\ -Verbose
                }
            Remove-Item .\ffmpeg\ -Recurse
            Remove-Item .\ffmpeg.zip
            Get-ChildItem
            [System.Environment]::SetEnvironmentVariable(
                "PATH",
                "C:\ffmpeg\;$([System.Environment]::GetEnvironmentVariable('PATH','MACHINE'))",
                "Machine"
            )
            $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine")
          fi
        shell: pwsh

      - uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install Dependencies
        run: |
          poetry env use "${{ matrix.python-version }}"
          poetry install

      - name: Test with pytest
        run: poetry run pytest --dist no -n 0
        env:
          HUGGINGFACE_HUB_TOKEN: ${{ secrets.HUGGINGFACE_HUB_TOKEN }}
